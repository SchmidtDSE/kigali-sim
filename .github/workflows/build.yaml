name: Build
on: [push]

permissions:
  actions: read
  contents: read

jobs:
  lintJs:
    environment: build
    runs-on: ubuntu-latest
    name: Run JS Linter
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node
        uses: actions/setup-node@v4
      - name: Install node deps
        run: npm install --dev
      - name: Lint production code
        run: npx eslint ./js/*.js
      - name: Lint test code
        run: npx eslint ./test/*.js
  checkCacheBusters:
    environment: build
    runs-on: ubuntu-latest
    name: Check Cache Busters
    defaults:
      run:
        shell: bash
        working-directory: ./engine
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node
        uses: actions/setup-node@v4
      - name: Install Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Install node deps
        run: npm install
      - name: Build
        run: bash ./support/make.sh
      - name: Install front end deps
        run: bash ./support/install_deps.sh
      - name: Prepare deploy
        run: bash ./support/prepare_deploy.sh
      - name: Copy guide
        run: cp -r ./guide ./deploy/guide
      - name: Update cache busters
        run: bash ./support/update_cache_busters.sh
  buildJava:
    environment: Build
    runs-on: ubuntu-latest
    name: Build Fat Jar
    defaults:
      run:
        shell: bash
        working-directory: ./engine
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Build fat jar
        run: ./gradlew fatJar
      - name: Upload jar
        uses: actions/upload-artifact@v4
        with:
          name: fatJar
          path: build/libs/joshsim-fat.jar
  checkJava:
    needs: buildJava
    environment: Build
    runs-on: ubuntu-latest
    name: Static Checks
    defaults:
      run:
        shell: bash
        working-directory: ./engine
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Check grammar
        run: ./gradlew generateGrammarSource
      - name: Check main style
        run: ./gradlew checkstyleMain
      - name: Check test style
        run: ./gradlew checkstyleTest
  testJava:
    needs: buildJava
    environment: Build
    runs-on: ubuntu-latest
    name: Test Java
    defaults:
      run:
        shell: bash
        working-directory: ./engine
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Run tests
        run: ./gradlew test
  buildWasm:
    environment: Build
    needs: [ checkJava, buildJava, testJava ]
    runs-on: ubuntu-latest
    name: Build WASM for Browser
    defaults:
      run:
        shell: bash
        working-directory: ./engine
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Build war
        run: ./gradlew war
      - name: Upload war
        uses: actions/upload-artifact@v4
        with:
          name: war
          path: build/libs/JoshSim.war
  unitTestsBrowser:
    environment: build
    runs-on: ubuntu-latest
    name: Run Unit Tests
    needs: [ buildWasm ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node
        uses: actions/setup-node@v4
      - name: Install Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Install node deps
        run: npm install
      - name: Build
        run: bash ./support/make.sh
      - name: Install front end deps
        run: bash ./support/install_deps.sh
      - name: Install browser
        run: sudo apt install -y chromium-browser
      - name: Run unit tests
        run: npx grunt
  deploy-prep:
    environment: build
    if: github.ref == 'refs/heads/deploy'
    runs-on: ubuntu-latest
    name: Deploy Preparation
    needs: [ lintJs, unitTestsBrowser, checkCacheBusters, buildWasm ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node
        uses: actions/setup-node@v4
      - name: Install Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Install node deps
        run: npm install
      - name: Build
        run: bash ./support/make.sh
      - name: Install front end deps
        run: bash ./support/install_deps.sh
      - name: Prepare deploy
        run: bash ./support/prepare_deploy.sh
      - name: Copy guide
        run: cp -r ./guide ./deploy/guide
      - name: Update cache busters
        run: bash ./support/update_cache_busters.sh
      - name: Upload deploy artifact
        uses: actions/upload-artifact@v4
        with:
          name: deploy-files
          path: ./deploy
          retention-days: 1
  deploy:
    environment: deploy
    if: github.ref == 'refs/heads/deploy'
    runs-on: ubuntu-latest
    name: Deploy
    needs: [deploy-prep]
    steps:
      - name: Download deploy artifact
        uses: actions/download-artifact@v4
        with:
          name: deploy-files
          path: ./deploy
      - name: Upload
        uses: Creepios/sftp-action@v1.0.3
        with:
          host: ${{ secrets.SFTPHOST }}
          port: 22
          username: ${{ secrets.SFTPUSER }}
          password: ${{ secrets.SFTPPASSWORD }}
          localPath: './deploy'
          remotePath: './mlf-policy-explorer.org'
